// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmclient from "./wasmclient"
import * as app from "./doodle"

export const eventHandlers: wasmclient.EventHandlers = {
	"doodle.gameEnded": onDoodleGameEndedThunk,
	"doodle.gameStarted": onDoodleGameStartedThunk,
	"doodle.playerJoinsNextBigBlind": onDoodlePlayerJoinsNextBigBlindThunk,
	"doodle.playerJoinsNextHand": onDoodlePlayerJoinsNextHandThunk,
	"doodle.playerLeft": onDoodlePlayerLeftThunk,
	"doodle.playerWinsAllPots": onDoodlePlayerWinsAllPotsThunk,
};

export class EventGameEnded extends wasmclient.Event {
	public tableNumber: wasmclient.Uint32 | undefined;
}

function onDoodleGameEndedThunk(message: string[]) {
	const e = new EventGameEnded(message);
	e.tableNumber = e.nextUint32();
	app.onDoodleGameEnded(e);
}

export class EventGameStarted extends wasmclient.Event {
	public paidBigBlindTableSeatNumber: wasmclient.Uint16 | undefined;
	public paidSmallBlindTableSeatNumber: wasmclient.Uint16 | undefined;
	public tableNumber: wasmclient.Uint32 | undefined;
}

function onDoodleGameStartedThunk(message: string[]) {
	const e = new EventGameStarted(message);
	e.paidBigBlindTableSeatNumber = e.nextUint16();
	e.paidSmallBlindTableSeatNumber = e.nextUint16();
	e.tableNumber = e.nextUint32();
	app.onDoodleGameStarted(e);
}

export class EventPlayerJoinsNextBigBlind extends wasmclient.Event {
	public playerAgentId: wasmclient.AgentID | undefined;
	public playersInitialChipCount: wasmclient.Uint64 | undefined;
	public tableNumber: wasmclient.Uint32 | undefined;
	public tableSeatNumber: wasmclient.Uint16 | undefined;
}

function onDoodlePlayerJoinsNextBigBlindThunk(message: string[]) {
	const e = new EventPlayerJoinsNextBigBlind(message);
	e.playerAgentId = e.nextAgentID();
	e.playersInitialChipCount = e.nextUint64();
	e.tableNumber = e.nextUint32();
	e.tableSeatNumber = e.nextUint16();
	app.onDoodlePlayerJoinsNextBigBlind(e);
}

export class EventPlayerJoinsNextHand extends wasmclient.Event {
	public playerAgentId: wasmclient.AgentID | undefined;
	public playersInitialChipCount: wasmclient.Uint64 | undefined;
	public tableNumber: wasmclient.Uint32 | undefined;
	public tableSeatNumber: wasmclient.Uint16 | undefined;
}

function onDoodlePlayerJoinsNextHandThunk(message: string[]) {
	const e = new EventPlayerJoinsNextHand(message);
	e.playerAgentId = e.nextAgentID();
	e.playersInitialChipCount = e.nextUint64();
	e.tableNumber = e.nextUint32();
	e.tableSeatNumber = e.nextUint16();
	app.onDoodlePlayerJoinsNextHand(e);
}

export class EventPlayerLeft extends wasmclient.Event {
	public tableNumber: wasmclient.Uint32 | undefined;
	public tableSeatNumber: wasmclient.Uint16 | undefined;
}

function onDoodlePlayerLeftThunk(message: string[]) {
	const e = new EventPlayerLeft(message);
	e.tableNumber = e.nextUint32();
	e.tableSeatNumber = e.nextUint16();
	app.onDoodlePlayerLeft(e);
}

export class EventPlayerWinsAllPots extends wasmclient.Event {
	public tableNumber: wasmclient.Uint32 | undefined;
	public tableSeatNumber: wasmclient.Uint16 | undefined;
	public totalPotSize: wasmclient.Uint64 | undefined;
}

function onDoodlePlayerWinsAllPotsThunk(message: string[]) {
	const e = new EventPlayerWinsAllPots(message);
	e.tableNumber = e.nextUint32();
	e.tableSeatNumber = e.nextUint16();
	e.totalPotSize = e.nextUint64();
	app.onDoodlePlayerWinsAllPots(e);
}
